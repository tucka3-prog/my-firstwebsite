{"version":3,"sources":["components/todo/HeaderComponent.jsx","services/service.jsx","services/file-service.jsx","services/fileUploader.jsx","components/memeComponents/Meme.js","components/todo/FooterComponent.jsx","components/todo/EditImageFunction.js","components/todo/RefreshGalery.js","components/todo/Galery.js","components/todo/UserGalery.js","components/todo/TodoApp.jsx","App.js","serviceWorker.js","index.js"],"names":["HeaderComponent","className","href","to","Component","console","log","this","serviceInstance","axios","create","baseURL","timeout","headers","FileService","data","service","getRestClient","post","FileUploader","handleUploadFile","event","FormData","file","target","files","append","fileService","uploadFileToServer","then","response","name","getFileName","catch","error","status","message","state","fileName","bind","type","onChange","setState","Meme","template","onClick","style","width","key","id","src","url","alt","FooterComponent","editImageFunction","info","get","RefreshGalery","Galery","useState","templates","setTemplates","setTemplate","topText","setTopText","bottomText","setBottomText","setMessage","useEffect","fetch","x","json","textAlign","onSubmit","e","preventDefault","placeholder","value","map","TodoApp","path","component","UserGalery","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e52cd4e.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\n\nclass HeaderComponent extends Component {\n    render() {\n\n\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><a href=\"https://tucka3-prog.github.io/my-firstwebsite/\" className=\"navbar-brand\">EricsMemes</a></div>\n                    <ul className=\"navbar-nav\">\n                    <li><Link className=\"nav-link\" to=\"/https://tucka3-prog.github.io/my-firstwebsite/\" >Galery</Link></li>}\n                    <li><Link className=\"nav-link\" to=\"/userGalery\" >User Galery</Link></li>}\n                    </ul>\n      \n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default HeaderComponent","import axios from 'axios';\r\nclass Service {\r\n\r\n  constructor() {\r\n    console.log(\"Service is constructed\");\r\n  }\r\n\r\n  getRestClient() {\r\n    if (!this.serviceInstance) {\r\n      this.serviceInstance = axios.create({\r\n        baseURL: 'http://35.224.119.47:8080/',\r\n        timeout: 10000,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n      });\r\n    }\r\n    return this.serviceInstance;\r\n  }\r\n}\r\n\r\nexport default (new Service());","import service from './service.jsx';\r\n\r\nexport class FileService {\r\n    uploadFileToServer(data){\r\n        //returns Promise object\r\n        return service.getRestClient().post('/files', data);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { FileService } from '../services/file-service.jsx';\r\n\r\nexport class FileUploader extends Component {\r\n    constructor() {\r\n        super();\r\n        this.fileService = new FileService();\r\n        this.state = {\r\n            fileName: \"\"\r\n        }\r\n\r\n        this.getFileName = this.getFileName.bind(this);\r\n    }\r\n\r\n    handleUploadFile = (event) => {\r\n        const data = new FormData();\r\n        //using File API to get chosen file\r\n        let file = event.target.files[0];\r\n\r\n        console.log(\"Uploading file\", event.target.files[0]);\r\n        data.append('file', event.target.files[0]);\r\n        data.append('name', 'my_file');\r\n        data.append('description', 'this file is uploaded by Erikas');\r\n        let self = this;\r\n        //calling async Promise and handling response or error situation\r\n        this.fileService.uploadFileToServer(data).then((response) => {\r\n            console.log(\"File \" + file.name + \" is uploaded\");\r\n            console.log(this.getFileName(file.name));\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            if (error.response) {\r\n                //HTTP error happened\r\n                console.log(\"Upload error. HTTP error/status code=\",error.response.status);\r\n            } else {\r\n                //some other error happened\r\n               console.log(\"Upload error. HTTP error/status code=\",error.message);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.handleUploadFile} />\r\n            </div>\r\n        )\r\n    };\r\n\r\n    getFileName (name) {\r\n        this.setState({fileName: name})\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport const Meme = ({template, onClick}) => {\r\n    return (\r\n\r\n        <img \r\n        style={{ width: 200}} \r\n        key={template.id} \r\n        src={template.url} \r\n        alt={template.name}\r\n        onClick={onClick}\r\n        />\r\n    );\r\n\r\n};\r\n","import React, {Component} from 'react'\n\nclass FooterComponent extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <span className=\"text-muted\">All Rights Reserved 2019 Erics Dev</span>\n            </footer>\n        )\n    }\n}\n\nexport default FooterComponent","import axios from \"axios\"\r\n\r\nfunction editImageFunction(info) {\r\n        return axios.get(`http://35.224.119.47:8080/editPicture/${info}`)\r\n    }\r\n\r\n\r\nexport default editImageFunction;","import axios from \"axios\"\r\n\r\nfunction RefreshGalery() {\r\n        return axios.get(\"http://35.224.119.47:8080/restart\")\r\n    }\r\n\r\n\r\nexport default RefreshGalery;","import React, { Component, useEffect, useState, View, ScrollView } from 'react';\r\n\r\nimport { FileUploader } from '../../services/fileUploader.jsx';\r\nimport { Meme } from '../../components/memeComponents/Meme';\r\nimport FooterComponent from \"../../components/todo/FooterComponent.jsx\";\r\nimport editImageFunction from \"../../components/todo/EditImageFunction\"\r\nimport RefreshGalery from \"../../components/todo/RefreshGalery\"\r\n\r\nexport function Galery() {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [template, setTemplate] = useState(null);\r\n  const [topText, setTopText] = useState(\"\");\r\n  const [bottomText, setBottomText] = useState(\"\");\r\nconst [message, setMessage] = useState(\"\");\r\n\r\n  \r\n  useEffect(() => {\r\n    fetch(\"http://35.224.119.47:8080/images/all\").then(x =>\r\n      x.json().then(response => setTemplates(response)))\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div style={{ textAlign: \"center\" }} >\r\n         <h2>Welcome,</h2>\r\n         <h2>you can choose one of the predefined images or upload your own</h2>\r\n         <div><FileUploader/></div>\r\n         <div><FileUploader/></div>\r\n      {template && (\r\n        <form onSubmit={e => {\r\n          e.preventDefault();\r\n          editImageFunction(template.name+\",\"+topText+\",\"+bottomText);\r\n          RefreshGalery()\r\n          {setMessage(\"Edit Complete you can find picture in User Galery\")}\r\n        }}>\r\n         \r\n          <Meme template={template} />\r\n          <input\r\n            placeholder=\"top text\"\r\n            value={topText}\r\n            onChange={e => setTopText(e.target.value)}\r\n          />\r\n            <input\r\n            placeholder=\"bottom text\"\r\n            value={bottomText}\r\n            onChange={e => setBottomText(e.target.value)}\r\n          />\r\n          {/* <input placeholder=\"bottom text\" /> */}\r\n          <button type=\"submit\" >Submit</button>\r\n          <div>{message}</div>\r\n        </form>\r\n  \r\n      )}\r\n      {!template && (\r\n        <>\r\n          <h1></h1>\r\n          {templates.map(template => {\r\n            return (\r\n              <Meme\r\n                template={template}\r\n                onClick={() => {\r\n                  setTemplate(template)\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n      \r\n     <div>\r\n       <FooterComponent/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n// class App extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <TodoApp/>\r\n//       <h1>You can pick a template, or upload your own picture:\r\n//         </h1> <FileUploader />\r\n//         <Galery/>\r\n//       </div>\r\n\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\nexport default Galery;\r\n","import React, { Component, useEffect, useState, View, ScrollView } from 'react';\r\n\r\nimport { Meme } from '../../components/memeComponents/Meme';\r\nimport FooterComponent from \"../../components/todo/FooterComponent.jsx\"\r\n\r\nexport function Galery() {\r\n  const [templates, setTemplates] = useState([]);\r\n  const [template, setTemplate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://35.224.119.47:8080/users/all\").then(x =>\r\n      x.json().then(response => setTemplates(response)))\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }} >\r\n\r\n      {template && (\r\n        <form onSubmit={e => {\r\n          e.preventDefault()\r\n          // add logic to create meme from api\r\n        }}>\r\n          <Meme template={template} />\r\n\r\n        </form>\r\n      )}\r\n      {!template && (\r\n        <>\r\n          <h1></h1>\r\n          {templates.map(template => {\r\n            return (\r\n              <Meme\r\n                template={template}\r\n                onClick={() => {\r\n                  setTemplate(template)\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n\r\n     <div>\r\n       <FooterComponent/>\r\n      </div>\r\n      <div>\r\n       <FooterComponent/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Galery;\r\n","import React, {Component} from 'react'\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'\nimport HeaderComponent from './HeaderComponent.jsx'\nimport Galery from \"./Galery\"\nimport UserGalery from \"./UserGalery\"\n\nclass TodoApp extends Component {\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <>\n                        <HeaderComponent/>\n                        <Switch>\n                            <Route path=\"/https://tucka3-prog.github.io/my-firstwebsite/\" component={Galery}/>\n                            <Route path=\"/userGalery\" component={UserGalery}/>\n                            <Route component={TodoApp}/>\n                        </Switch>\n                       \n                    </>\n                </Router>\n                {/*<LoginComponent/>\n                <WelcomeComponent/>*/}\n            </div>\n        )\n    }\n}\n\nexport default TodoApp","import React, { Component, useEffect, useState, View, ScrollView } from 'react';\nimport './App.css';\nimport TodoApp from \"./components/todo/TodoApp\";\nimport \"./bootstrap.css\";\nimport { FileUploader } from './services/fileUploader.jsx';\nimport { Meme } from './components/memeComponents/Meme';\nimport FooterComponent from \"./components/todo/FooterComponent.jsx\"\nimport HeaderComponent from './components/todo/HeaderComponent.jsx'\nimport Galery from './components/todo/Galery'\n\n\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <TodoApp/>\n      </div>\n\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}